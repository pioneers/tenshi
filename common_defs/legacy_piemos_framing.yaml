# Licensed to Pioneers in Engineering under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  Pioneers in Engineering licenses
# this file to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
#  with the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License

- name: uint8_t
  kind: alien
  size: 1
  repr: unsigned
- name: uint16_t
  kind: alien
  size: 2
  repr: unsigned
- name: uint32_t
  kind: alien
  size: 4
  repr: unsigned
- name: uint64_t
  kind: alien
  size: 8
  repr: unsigned

- name: PIER_INCOMINGDATA_IDENT
  kind: const
  value: 254
- name: PIER_OUTGOINGDATA_IDENT
  kind: const
  value: 253
- name: TENSHI_NAIVE_BULK_START_IDENT
  kind: const
  value: 0x4B
- name: TENSHI_NAIVE_BULK_CHUNKREQ_IDENT
  kind: const
  value: 0x41
- name: TENSHI_NAIVE_BULK_CHUNK_IDENT
  kind: const
  value: 0x4E
- name: TENSHI_NAIVE_BULK_STOP_IDENT
  kind: const
  value: 0x61
- name: NDL3_IDENT
  kind: const
  value: 0x64

- name: NDL3_UBJSON_PORT
  kind: const
  value: 0x4e
- name: NDL3_STRING_PORT
  kind: const
  value: 0x59
- name: NDL3_CODE_PORT
  kind: const
  value: 0x41
- name: NDL3_CONFIG_PORT
  kind: const
  value: 0x61
- name: NDL3_FAST_PORT
  kind: const
  value: 0x7e

- name: pier_incomingdata
  kind: struct
  # No packing necessary, all bytes
  slots:
    - name: ident
      type: uint8_t
    - name: fieldtime
      type: uint8_t
    - name: flags
      type: uint8_t
    - name: analog
      type: uint8_t[7]
    - name: digital
      type: uint8_t
- name: pier_outgoingdata
  kind: struct
  # No packing necessary, all bytes
  slots:
    - name: ident
      type: uint8_t
    - name: rssi
      type: uint8_t
    - name: batteryStatus
      type: uint8_t
    - name: analog
      type: uint8_t[7]
    - name: digital
      type: uint8_t

# Protocol flow is as follows:
#   PC                  uC
#   ------start---------->
#   (pray for no dropped packets)
#   <-----chunkreq--------
#   ------chunk---------->
#   repeat until done, interleaving is possible
#   <-----done------------
#   (pray for no dropped packets)
- name: tenshi_bulk_start
  kind: struct
  packed: true
  slots:
    - name: ident
      type: uint8_t
    - name: stream_id
      type: uint32_t
    - name: length
      type: uint32_t
- name: tenshi_bulk_chunkreq
  kind: struct
  packed: true
  slots:
    - name: ident
      type: uint8_t
    - name: stream_id
      type: uint32_t
    - name: start_addr
      type: uint32_t
    - name: end_addr
      type: uint32_t
- name: tenshi_bulk_chunk
  kind: struct
  packed: true
  slots:
    - name: ident
      type: uint8_t
    - name: stream_id
      type: uint32_t
    - name: start_addr
      type: uint32_t
    - name: end_addr
      type: uint32_t
    - name: data
      type: uint8_t[]
- name: tenshi_bulk_stop
  kind: struct
  packed: true
  slots:
    - name: ident
      type: uint8_t
    - name: stream_id
      type: uint32_t
