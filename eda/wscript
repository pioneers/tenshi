#!/usr/bin/env python
from __future__ import print_function

import glob
import os.path
from waf_extensions import declare_variants, add_dependency

declare_variants(subdir='boards')


def have_pdftk():
    import subprocess
    if subprocess.call(['which', 'pdftk']) != 0:
        return False
    return True


def build(bld):
    if 'boards' not in bld.variant:
        return

    # HACK: If pdftk is not installed, don't generate documentation
    # packets (instead of failing the build)
    build_docu_packets = have_pdftk()

    for board in glob.glob('eda/*.brd'):
        base_name = os.path.split(board)[-1]
        outfile = ('../../artifacts/boards/' +
                   os.path.splitext(base_name)[0] + '.zip')
        bld(rule='${root}/tools/run-eagle-cam-v2.py '
                 '${root}/tools/gerber_rules.yaml '
                 '${SRC} ${TGT}',
            source=base_name,
            target=outfile)

    for schematic in glob.glob('eda/*.sch'):
        base_name = os.path.split(schematic)[-1]
        outfile = ('../../artifacts/boards/' +
                   os.path.splitext(base_name)[0] + '.csv')
        bld(rule='${root}/tools/generate_bom.py ${SRC} ${TGT} '
                 '${root}/tools/parts-db.yaml',
            source=base_name,
            target=outfile)
        add_dependency(bld, outfile, '${root}/tools/parts-db.yaml')
        if build_docu_packets:
            pdffile = ('../../artifacts/boards/' +
                       os.path.splitext(base_name)[0] + '.pdf')
            bld(rule='${root}/tools/docu-packet-gen.py ${SRC} ${TGT} ',
                source=base_name,
                target=pdffile)
